% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/core-deparse.R
\name{make_deparser}
\alias{make_deparser}
\title{#' Concatenate two lists
#'
#' @param list0 A named list
#' @param list1 A named list
clist <- function(list0, list1) {
  ns0 <- names(list0)
  ns1 <- names(list1)
  # Update the ones with the same name
  list0[intersect(ns0, ns1)] <- list1[intersect(ns0, ns1)]
  # Keep the old ones and Add the new ones
  append(list0, list1[setdiff(ns1, ns0)])
}
A constructor for a "typed" deparser}
\usage{
make_deparser(predicate_fun, deparse_fun)
}
\arguments{
\item{predicate_fun}{A function that takes a "lang" object and return a logical.}

\item{deparse_fun}{A function that takes a "lang" object and return a character string.}
}
\value{
A list; a deparser ready to be dispatched by "type".
}
\description{
#' Concatenate two lists
#'
#' @param list0 A named list
#' @param list1 A named list
clist <- function(list0, list1) {
  ns0 <- names(list0)
  ns1 <- names(list1)
  # Update the ones with the same name
  list0[intersect(ns0, ns1)] <- list1[intersect(ns0, ns1)]
  # Keep the old ones and Add the new ones
  append(list0, list1[setdiff(ns1, ns0)])
}
A constructor for a "typed" deparser
}
\examples{
str(make_deparser(predicate_fun = rlang::is_call, deparse_fun = deparse))

}
